{% extends 'base.html.twig' %}

{% block title %}RollCardPlay - Monster page{% endblock %}
{% block description %}<meta name="description" content="This is the monster page where you can see the many monsters created by users or by you." />
{% endblock %}
{% block body %}
  <div class="jumbotron p-3 p-md-5 text-white rounded bg-dark" style="background-image:url({{ asset('ressources/98b94bffc2ae72382a9ea0e2bd4ec9d4-min.jpg') }}); background-size: cover;background-position: center;">
    <div class="col-md-6 px-0" style="padding: 50px;">
      <h1 class="display-4 font-italic">Monster page</h1>
      <p class="lead my-3">On this page you can view, edit, delete or create again <strong>monster</strong>.</p>
      <a class="btn btn-primary" href="{{ path('monster_create', {id: 0}) }} " title="create-monster"><strong>Cr√©er</strong> un monstre</a>
    </div>
  </div>
  <div class="container" style="">
    <p class="lead my-3">The monsters present are usable in the quest creation, All validated monsters can be used by all players. Of course monsters can only be deleted and edited by their <strong>creator</strong> or admins.</p>
    {% for message in app.flashes('succes') %}
      <div class="alert alert-success">
        {{ message }}
      </div>
    {% endfor %}
    {% for message in app.flashes('warning') %}
      <div class="alert alert-warning">
        {{ message }}
      </div>
    {% endfor %}
    {{ form_start(form) }}
      <div class="form-row">
        <div class="col">
          {{ form_row(form.maxHp) }}
        </div>
        <div class="col">
          {{ form_row(form.minHp) }}
        </div>
        <div class="col">
          <button class="btn btn-primary">Search</button>
        </div>
      </div>
    {{ form_end(form) }}
    <div class="row"  id="div3" style="display:none;">
      <div class="navigation col-12" style="display: inline-block;">
        {{ knp_pagination_render(monsters) }}{#{{ knp_pagination_render(pagination, 'MyBundle:Pagination:pagination.html.twig') }}]#}
      </div>
      {% for monster in monsters %}
        {#% cache 'monster' ~ monster.id 1 %#}
        <!-- <div class="col-12 col-md"> -->
        <div class="d-flex  justify-content-center col-12 col-sm-12 col-md-6 col-lg-6 col-xl-4" style="padding: 30px;">
          <div class="card " style="width: 18rem;padding: 10px;">
            <img class="card-img-top rounded img-fluid img-thumbnail" align="middle" style="width: 17rem;height: auto;margin: auto auto;" src="{{ vich_uploader_asset(monster, 'imageFile') }}" alt="monster-image">
            <div class="card-body">
              <ul class="list-group list-group-flush">
                <li class="list-group-item list-group-item-action"><h5 class="card-title"> {{ monster.name }} </h5></li>
                <li class="list-group-item list-group-item-action  flex-column align-items-start">
                  <div class="d-flex w-100 justify-content-between">
                    <p class="card-text">{{ monster.description }}</p>
                    <small>{{ monster.createdAt|date("m/d/Y") }}</small>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <div class="row">
                    <div class="col-12">
                      <div class="list-group" id="list-tab" role="tablist">
                        <a class="list-group-item list-group-item-action" id="list-profile-list{{ monster.id }}" data-toggle="list" href="#list-profile{{ monster.id }}" role="tab" aria-controls="profile{{ monster.id }}" title="life">Life</a>
                        <a class="list-group-item list-group-item-action" id="list-messages-list{{ monster.id }}" data-toggle="list" href="#list-messages{{ monster.id }}" role="tab" aria-controls="messages{{ monster.id }}" title="defence">Defense</a>
                        <a class="list-group-item list-group-item-action" id="list-settings-list{{ monster.id }}" data-toggle="list" href="#list-settings{{ monster.id }}" role="tab" aria-controls="settings{{ monster.id }}" title="attack">Attack</a>
                        <a class="list-group-item list-group-item-action" id="list-autre-list{{ monster.id }}" data-toggle="list" href="#list-autre{{ monster.id }}" role="tab" aria-controls="autre{{ monster.id }}" title="skill">Skill</a>
                      </div>
                    </div>
                  </div>
                </li>
                <li class="list-group-item list-group-item-action">
                  <div class="col-12">
                    <div class="tab-content" id="nav-tabContent">
                      <div class="tab-pane fade" id="list-profile{{ monster.id }}" role="tabpanel" aria-labelledby="list-profile-list{{ monster.id }}">Number of life points of the monster {{ monster.hp }}
                      </div>
                      <div class="tab-pane fade" id="list-messages{{ monster.id }}" role="tabpanel" aria-labelledby="list-messages-list{{ monster.id }}">Defence of monster {{ monster.def }}
                      </div>
                      <div class="tab-pane fade" id="list-settings{{ monster.id }}" role="tabpanel" aria-labelledby="list-settings-list{{ monster.id }}">Monster attack damage {{ monster.atk }}
                      </div>
                      <div class="tab-pane fade" id="list-autre{{ monster.id }}" role="tabpanel" aria-labelledby="list-autre-list{{ monster.id }}">
                        <ul>
                          {% for skill in monster.skillbdd %}
                            <li>{{ skill.name }}</li>
                          {% endfor %}
                        </ul>
                      </div>
                    </div>
                  </div>
                </li>
                {% if user %}
                  {% if monster.createur == user.id or user.hasGroup("superadmin") %}
                    <li class="list-group-item list-group-item-action  d-flex justify-content-between align-items-center">
                      <a href="{{ path('monster_edit', {id: monster.id}) }}" class="btn btn-primary" title="edit-monster">editer</a>
                      {{ include('monster/_delete_form.html.twig') }}
                    </li>
                  {% endif %}
                  <!--SUPER LIKE -->
                  <a href="{{ path('post_like_monster', {'id': monster.id}) }}" class="btn btn-link js-like" title="like-monster">
                    <div style="display: inline">
                      {% if app.user and monster.isLikedByUser(app.user) %}
                        <i class="fas fa-thumbs-up idelta"></i>
                      {% else %}
                        <i class="far fa-thumbs-up idelta"></i>
                      {% endif %}
                      <span class="js-likes">{{ monster.likes | length }}</span>
                      <span class="js-label" >I like</span>
                      <p style="opacity:0;">{{ path('post_likereload_monster', {'id': monster.id}) }}</p>
                    </div>
                  </a>
                {% endif %}
              </ul>
            </div>
          </div>
        </div>
        {#% endcache %#}
      {% endfor %}
      <div class="navigation col-12" style="display: inline-block;">
        {{ knp_pagination_render(monsters) }}
      </div>
    </div>
  </div>

{% endblock %}
{% block javascripts %}
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
  function onClickBtnLike(event){
    event.preventDefault();
    const url = this.href;
    const spanCount = this.querySelector('span.js-likes');
    const icone = this.querySelector('i');
    axios.get(url).then(function(response){
      const likes = response.data.likes;
      spanCount.textContent = likes;
      if(icone.classList.contains('fas')) {
         icone.classList.replace('fas','far');
         }else{
          icone.classList.replace('far','fas');
         }
    });
  }
  document.querySelectorAll('a.js-like').forEach(function(link){
    link.addEventListener('click', onClickBtnLike);
  })

  /*test de reload auto*/
  /*window.setTimeout(test,10000);
  function test(){
  document.querySelectorAll('a.js-like').forEach(function(link){
    const icone = link.querySelector('i');
    const textp = link.querySelector('p');
    const url = textp.textContent;
    const spanCount = link.querySelector('span.js-likes');
    axios.get(url).then(function(response){
      const likes = response.data.likes;
      spanCount.textContent = likes;
    });
  })
  window.setTimeout(test,10000);
  }*/
</script>
  {% endblock %}
